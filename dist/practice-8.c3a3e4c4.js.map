{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAO,SAASC,EAAcC,EAAMC,GAAO,GAEzC,OADAC,QAAQC,IAAIH,GACJC,EAKJD,EACGI,QAAO,CAACC,EAAMC,IAAmB,KAATD,IACxBE,KAAKF,GAAUG,OAAOC,MAAMD,OAAOH,IAAS,EAAIG,OAAOH,KAN1DL,EACGU,MAAM,KACNN,QAAQC,GAAkB,KAATA,IACjBE,KAAKF,GAAUG,OAAOC,MAAMD,OAAOH,IAAS,EAAIG,OAAOH,MDIhE,WACE,MAAMM,EAASC,SAASC,cAAc,iBAEhCC,EAAYF,SAASC,cAAc,gBAAkB,KAC3D,IAAIE,EAAa,KACjB,GAAkB,OAAdD,EAAoB,OAAOZ,QAAQc,MAAM,sBAC7CF,EAAUG,iBAAiB,UAAWC,IACpC,MAAMjB,EAAOiB,EAAEC,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWtB,GAElBoB,EAAOJ,iBAAiB,QAASC,IAC/BH,EAAaM,EAAOG,OACjBd,MAAM,MACNH,KAAKF,GAASA,EAAKoB,SACnBlB,KAAKF,GAASA,EAAKK,MAAK,SAC3BR,QAAQC,IAAIY,GACZW,QAAUX,EAAWR,KAAKF,GAASG,OAAOH,EAAK,MAC/CsB,QAAUZ,EAAWR,KAAKF,GAASG,OAAOH,EAAK,MAC/CU,EAAa,CAAEa,EAAGF,QAASG,EAAGF,SAC9Bf,SAASC,cAAc,eAAeiB,UAAY,WAAW7B,EAAK8B,UAGpEV,EAAOW,QAAU,WACf9B,QAAQC,IAAIkB,EAAOL,WAGvBL,EAAOM,iBAAiB,SAAUC,IAChC,MAAMe,EAASrB,SAASC,cAAc,YAAYqB,OAAS,GACrDC,EAASvB,SAASC,cAAc,YAAYqB,OAAS,GAErDE,EACW,OAAfrB,EACI,IAAIlB,EAAAwC,QAAWtC,EAAckC,GAASlC,EAAcoC,IACpD,IAAItC,EAAAwC,QACFtC,EAAc2B,SAAS,GACvB3B,EAAc4B,SAAS,IAE/BS,EAAIE,aACJF,EAAIG,mBAGRC","sources":["src/app/cfa_index.js","src/app/utils/helpers.js"],"sourcesContent":["import CFAnalysis from \"./CFAnalysis\";\r\nimport { toCorrectData } from \"./utils/helpers\";\r\nconst dataX = [\r\n  8, 13, 17, 6, 14, 21, 2, 16, 18, 15, 9, 10, 7, 22, 3, 5, 12, 19, 4, 20, 11,\r\n];\r\nconst dataY = [\r\n  1.8, 1.8, 1.8, 3.3, 2, 0.9, 2.4, 1.6, 1.4, 1.8, 1.6, 1.4, 2.3, 0.8, 4.3, 4.5,\r\n  1.4, 1.3, 4.1, 1, 1.4,\r\n];\r\n\r\nfunction start() {\r\n  const submit = document.querySelector(\"#submit-input\");\r\n  // configLoadData(\"#input-file\");\r\n  const fileInput = document.querySelector(\"#input-file\") ?? null;\r\n  let fileResult = null;\r\n  if (fileInput === null) return console.error(\"fileInput === null\");\r\n  fileInput.addEventListener(\"change\", (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n\r\n    reader.addEventListener(\"load\", (e) => {\r\n      fileResult = reader.result\r\n        .split(\"\\n\")\r\n        .map((item) => item.trim())\r\n        .map((item) => item.split(/\\s+/));\r\n      console.log(fileResult);\r\n      result1 = fileResult.map((item) => Number(item[4]));\r\n      result2 = fileResult.map((item) => Number(item[5]));\r\n      fileResult = { x: result1, y: result2 };\r\n      document.querySelector(\"#file-label\").innerText = `Loaded: ${file.name}`;\r\n    });\r\n\r\n    reader.onerror = function () {\r\n      console.log(reader.error);\r\n    };\r\n  });\r\n  submit.addEventListener(\"click\", (e) => {\r\n    const inputX = document.querySelector(\"#input-x\").value ?? \"\";\r\n    const inputY = document.querySelector(\"#input-y\").value ?? \"\";\r\n\r\n    const cfa =\r\n      fileResult === null\r\n        ? new CFAnalysis(toCorrectData(inputX), toCorrectData(inputY))\r\n        : new CFAnalysis(\r\n            toCorrectData(result1, true),\r\n            toCorrectData(result2, true)\r\n          );\r\n    cfa.printChart();\r\n    cfa.printFormulas();\r\n  });\r\n}\r\nstart();\r\n","export function toCorrectData(data, file = false) {\r\n  console.log(data);\r\n  return !file\r\n    ? data\r\n        .split(\",\")\r\n        .filter((item) => item !== \"\")\r\n        .map((item) => (Number.isNaN(Number(item)) ? 0 : Number(item)))\r\n    : data\r\n        .filter((item, index) => item !== \"\")\r\n        .map((item) => (Number.isNaN(Number(item)) ? 0 : Number(item)));\r\n}\r\n"],"names":["$5f3O5","parcelRequire","$bc12e36cba8f766a$export$5f097dbb1ec2e1a","data","file","console","log","filter","item","index","map","Number","isNaN","split","submit","document","querySelector","fileInput","fileResult","error","addEventListener","e","target","files","reader","FileReader","readAsText","result","trim","result1","result2","x","y","innerText","name","onerror","inputX","value","inputY","cfa","default","printChart","printFormulas","$ff80bd940b56a6aa$var$start"],"version":3,"file":"practice-8.c3a3e4c4.js.map"}